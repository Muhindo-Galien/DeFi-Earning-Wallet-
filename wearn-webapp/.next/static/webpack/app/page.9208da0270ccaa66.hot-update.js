"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-client)/./services.tsx":
/*!**********************!*\
  !*** ./services.tsx ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"connectWallet\": function() { return /* binding */ connectWallet; },\n/* harmony export */   \"getDAIBalance\": function() { return /* binding */ getDAIBalance; },\n/* harmony export */   \"getEthereumContract\": function() { return /* binding */ getEthereumContract; },\n/* harmony export */   \"getMyBalance\": function() { return /* binding */ getMyBalance; },\n/* harmony export */   \"getYDAIBalance\": function() { return /* binding */ getYDAIBalance; },\n/* harmony export */   \"investDAI\": function() { return /* binding */ investDAI; },\n/* harmony export */   \"investUSDC\": function() { return /* binding */ investUSDC; },\n/* harmony export */   \"isWallectConnected\": function() { return /* binding */ isWallectConnected; }\n/* harmony export */ });\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3 */ \"(app-client)/./node_modules/web3/dist/web3.min.js\");\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(web3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./store */ \"(app-client)/./store/index.ts\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hot-toast */ \"(app-client)/./node_modules/react-hot-toast/dist/index.mjs\");\n/* harmony import */ var _constants_abi_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants/abi.json */ \"(app-client)/./constants/abi.json\");\n/* harmony import */ var _constants_ercAbi_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants/ercAbi.json */ \"(app-client)/./constants/ercAbi.json\");\n\n\n\n\n\nconst contractAddress = \"0x0F6595EDC3C5864e75A987a12ebC2911B1C33330\";\nconst contractABI = _constants_abi_json__WEBPACK_IMPORTED_MODULE_3__.abi;\nconst daiTokenAddress = \"0x68194a729C2450ad26072b3D33ADaCbcef39D574\"; // DAI token contract address\nconst daiTokenABI = _constants_ercAbi_json__WEBPACK_IMPORTED_MODULE_4__.abi; // DAI token contract ABI\nlet ethereum = null;\nlet web3 = null;\nif (true) {\n    ethereum = window.ethereum;\n    web3 = new (web3__WEBPACK_IMPORTED_MODULE_0___default())(ethereum || window.web3.currentProvider);\n}\nconst connectWallet = async ()=>{\n    try {\n        var _accounts_;\n        if (!ethereum) return console.log(\"Please install Metamask\");\n        const accounts = await ethereum.request({\n            method: \"eth_requestAccounts\"\n        });\n        (0,_store__WEBPACK_IMPORTED_MODULE_1__.setGlobalState)(\"connectedAccount\", (_accounts_ = accounts[0]) === null || _accounts_ === void 0 ? void 0 : _accounts_.toLowerCase());\n        window.location.reload();\n    } catch (error) {\n        console.log(error.message);\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(error.message);\n    }\n};\nconst isWallectConnected = async ()=>{\n    try {\n        if (!ethereum) return console.log(\"Please install Metamask\");\n        const accounts = await ethereum.request({\n            method: \"eth_accounts\"\n        });\n        window.ethereum.on(\"chainChanged\", (chainId)=>{\n            window.location.reload();\n        });\n        window.ethereum.on(\"accountsChanged\", async ()=>{\n            var _accounts_;\n            (0,_store__WEBPACK_IMPORTED_MODULE_1__.setGlobalState)(\"connectedAccount\", (_accounts_ = accounts[0]) === null || _accounts_ === void 0 ? void 0 : _accounts_.toLowerCase());\n            await isWallectConnected();\n            window.location.reload();\n        });\n        if (accounts.length) {\n            var _accounts_;\n            (0,_store__WEBPACK_IMPORTED_MODULE_1__.setGlobalState)(\"connectedAccount\", (_accounts_ = accounts[0]) === null || _accounts_ === void 0 ? void 0 : _accounts_.toLowerCase());\n        } else {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Please install Metamask\");\n            (0,_store__WEBPACK_IMPORTED_MODULE_1__.setGlobalState)(\"connectedAccount\", \"\");\n        }\n        const chainID = await window.ethereum.request({\n            method: \"eth_chainId\"\n        });\n        if (chainID == \"0xaa36a7\") {\n            (0,_store__WEBPACK_IMPORTED_MODULE_1__.setGlobalState)(\"currentChain\", \"Sepolia\");\n        } else {\n            console.log(\"here\");\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Can only access Sepolia\");\n            (0,_store__WEBPACK_IMPORTED_MODULE_1__.setGlobalState)(\"connectedAccount\", \"\");\n        }\n    } catch (error) {\n        reportError(error);\n    }\n};\nconst getEthereumContract = async ()=>{\n    const connectedAccount = (0,_store__WEBPACK_IMPORTED_MODULE_1__.getGlobalState)(\"connectedAccount\");\n    if (connectedAccount) {\n        if (!web3) {\n            web3 = new (web3__WEBPACK_IMPORTED_MODULE_0___default())(window.ethereum || window.web3.currentProvider);\n        }\n        const contract = new web3.eth.Contract(contractABI, contractAddress);\n        console.log(contract);\n        return contract;\n    } else {\n        return (0,_store__WEBPACK_IMPORTED_MODULE_1__.getGlobalState)(\"contract\");\n    }\n};\nconst getMyBalance = async ()=>{\n    const sender = (0,_store__WEBPACK_IMPORTED_MODULE_1__.getGlobalState)(\"connectedAccount\");\n    const daiTokenContract = new web3.eth.Contract(daiTokenABI, daiTokenAddress);\n    console.log(\"DAI Token Contract: \", daiTokenContract);\n    const daiBalance = await daiTokenContract.methods.balanceOf(sender).call();\n    const daiBalanceInEth = Number(await web3.utils.fromWei(daiBalance, \"ether\")).toFixed(2);\n    console.log(\"DAI Balance in Ether: \", daiBalanceInEth);\n    (0,_store__WEBPACK_IMPORTED_MODULE_1__.setGlobalState)(\"myDAIBalance\", daiBalanceInEth);\n    return daiBalance;\n};\n// ==================================================\nconst investDAI = async (amount)=>{\n    try {\n        const sender = (0,_store__WEBPACK_IMPORTED_MODULE_1__.getGlobalState)(\"connectedAccount\");\n        const value = web3 ? web3.utils.toWei(amount, \"ether\") : \"\";\n        console.log(\"Value in Wei: \", value);\n        const daiBalanceInEth = await getMyBalance();\n        if (Number(daiBalanceInEth) < Number(amount)) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Insufficient DAI balance\");\n            return;\n        }\n        const contract = await getEthereumContract();\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Send tokens initlialized\");\n        (0,_store__WEBPACK_IMPORTED_MODULE_1__.setGlobalState)(\"started\", true);\n        (0,_store__WEBPACK_IMPORTED_MODULE_1__.setLoadingMsg)(\"Send tokens\");\n        const investTx = await contract.methods.save(value).send({\n            from: sender\n        });\n        console.log(\"Invest Tx: \", investTx);\n        (0,_store__WEBPACK_IMPORTED_MODULE_1__.setAlert)(\"Token sent!\", \"green\");\n    } catch (error) {\n        (0,_store__WEBPACK_IMPORTED_MODULE_1__.setAlert)(\"Proccess failed\", \"red\");\n        console.log(error);\n        (0,_store__WEBPACK_IMPORTED_MODULE_1__.setGlobalState)(\"started\", false);\n    }\n};\n// ===================================================\nconst investUSDC = async (amount)=>{\n    const sender = (0,_store__WEBPACK_IMPORTED_MODULE_1__.getGlobalState)(\"connectedAccount\");\n    const value = window.web3.utils.toWei(amount, \"ether\");\n    try {\n        const contract = await getEtheriumContract();\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Transfer started...\");\n        (0,_store__WEBPACK_IMPORTED_MODULE_1__.setGlobalState)(\"started\", true);\n        const tx = await contract.methods.saveUSDC(value).send({\n            from: sender\n        });\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Token sent successfully\");\n    } catch (error) {\n        console.log(error);\n        (0,_store__WEBPACK_IMPORTED_MODULE_1__.setGlobalState)(\"started\", false);\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Transfer Failed\");\n    }\n};\n// ================================================\nconst getDAIBalance = async ()=>{\n    const daiTokenContract = new web3.eth.Contract(daiTokenABI, daiTokenAddress);\n    const contractBalance = await daiTokenContract.methods.balanceOf(contractAddress).call();\n    const contractBalanceInEth = web3.utils.fromWei(contractBalance, \"ether\");\n    console.log(\"DAI Balance in Ether: \", contractBalanceInEth);\n    (0,_store__WEBPACK_IMPORTED_MODULE_1__.setGlobalState)(\"DAIBalance\", contractBalanceInEth);\n};\nconst getYDAIBalance = async ()=>{\n    const contract = await getEthereumContract();\n    const yDaiTokenContract = await (contract === null || contract === void 0 ? void 0 : contract.methods.balance().call());\n    const contractBalanceInEth = web3.utils.fromWei(yDaiTokenContract, \"ether\");\n    console.log(\"DAI Balance in Ether: \", contractBalanceInEth);\n    (0,_store__WEBPACK_IMPORTED_MODULE_1__.setGlobalState)(\"yDAIBalance\", contractBalanceInEth);\n};\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-client)/./services.tsx\n"));

/***/ })

});